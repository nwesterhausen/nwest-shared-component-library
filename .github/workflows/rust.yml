name: Build & Test

permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  # sccache enablement
  SCCACHE_GHA_ENABLED: true
  RUSTC_WRAPPER: sccache

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: rust
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@9e326ebed976843c9932b3aa0e021c6f50310eb4 # 0.0.6
      - uses: dtolnay/rust-toolchain@21dc36fb71dd22e3317045c0c31a3f4249868b17 # master
        with:
          targets: x86_64-unknown-linux-gnu
          toolchain: stable
      - name: Build
        run: cargo build
      - name: Show sccache stats
        shell: bash
        run: |
          echo '## SCCACHE STATS' >> $GITHUB_STEP_SUMMARY
          echo '| Metric | Value |' >> $GITHUB_STEP_SUMMARY
          echo '|--------|-------|' >> $GITHUB_STEP_SUMMARY
          ${SCCACHE_PATH} --show-stats | awk -F'[[:space:]][[:space:]]+' 'NR<=22{ print "| "$1" | "$2" |"}' >> $GITHUB_STEP_SUMMARY
          echo '</hr>' >> $GITHUB_STEP_SUMMARY
  clippy:
    name: Clippy Check
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@9e326ebed976843c9932b3aa0e021c6f50310eb4 # 0.0.6
      - uses: dtolnay/rust-toolchain@21dc36fb71dd22e3317045c0c31a3f4249868b17 # master
        with:
          targets: x86_64-unknown-linux-gnu
          toolchain: stable
      - name: Install Toolchain
        uses: dtolnay/rust-toolchain@21dc36fb71dd22e3317045c0c31a3f4249868b17 # stable
        with:
          components: clippy
          toolchain: stable
      - name: Run clippy
        run: cargo clippy -- -D warnings
  test:
    name: Test
    timeout-minutes: 30
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@9e326ebed976843c9932b3aa0e021c6f50310eb4 # 0.0.6
      - uses: dtolnay/rust-toolchain@21dc36fb71dd22e3317045c0c31a3f4249868b17 # master
        with:
          targets: x86_64-unknown-linux-gnu
          toolchain: stable
      - uses: taiki-e/install-action@9bef7e9c3d7c7aa986ef19933b0722880ae377e0 # v2.44.13
        with:
          tool: cargo-nextest
      - name: Run tests
        run: cargo nextest run
